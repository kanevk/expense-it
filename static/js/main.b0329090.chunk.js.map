{"version":3,"sources":["AirtableContext.ts","Header.tsx","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AirtableContext","React","createContext","undefined","Header","style","marginBottom","display","alignItems","to","fontSize","margin","Home","useState","charts","setCharts","chartsTable","airbase","useContext","useEffect","a","select","maxRecords","all","records","foo","console","log","width","flexDirection","map","chart","maxWidth","fields","display_name","height","src","chart_url","alt","borderTopWidth","color","AddExpensePage","className","formatDate","Date","title","background","border","ImportFromRevolut","Routes","useRoutes","path","element","process","REACT_APP_PUBLIC_URL","date","d","month","getMonth","day","getDate","year","getFullYear","length","join","App","Airtable","apiKey","base","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0329090.chunk.js","sourcesContent":["import React, { useContext } from 'react';\n\nconst AirtableContext = React.createContext<\n  { airbase: Airtable.Base } | undefined\n>(undefined);\n\nconst useAirtable = () => {\n  return useContext(AirtableContext) as { airbase: Airtable.Base };\n};\n\nexport { AirtableContext, useAirtable };\n","import { Link } from \"react-router-dom\"\n\nconst Header = () => {\n  return (\n      <header style={{ marginBottom: \"5em\" }}>\n        <h1>ExpenseIT</h1>\n        <hr />\n        <div style={{display: 'flex', alignItems: 'center'}}>\n          <Link to=\"/\">Home</Link>\n          <span style={{fontSize: '1.5em', margin: '0 0.5em'}}>•</span>\n          <Link to=\"/add-expense\">Add Expense</Link>\n          <span style={{fontSize: '1.5em', margin: '0 0.5em'}}>•</span>\n          <Link to=\"/import-from-revolut\">Revolut import</Link>\n        </div>\n      </header>\n  )\n}\n\nexport { Header }\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAirtable } from \"./AirtableContext\";\nimport { Header } from \"./Header\";\n\nconst Home = () => {\n  const [charts, setCharts] = useState<any[]>([]);\n  const { airbase } = useAirtable();\n  const chartsTable = airbase(\"charts\");\n\n  useEffect(() => {\n    (async () => {\n      const records = await chartsTable.select({ maxRecords: 10 }).all();\n      const foo = [...records];\n      console.log(foo);\n      setCharts(foo);\n    })();\n  }, [setCharts, chartsTable]);\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <Header />\n      <div>\n        {charts.map((chart) => (\n          <div style={{ maxWidth: \"50em\" }}>\n            <h3>{chart.fields.display_name}</h3>\n            <img\n              style={{ width: \"100%\", height: \"auto\" }}\n              src={chart.fields.chart_url}\n              alt=\"\"\n            />\n            <hr style={{ borderTopWidth: \"0.2em\", color: \"gray\" }} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport { Home };\n","import Airtable from \"airtable\";\nimport { BrowserRouter as Router, useRoutes } from 'react-router-dom';\nimport { AirtableContext } from \"./AirtableContext\";\nimport { Home } from \"./Home\"\nimport \"./App.css\";\nimport { Header } from \"./Header\";\n\nconst AddExpensePage = () => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <Header />\n\n      <iframe\n        className=\"airtable-embed airtable-dynamic-height\"\n        src={`https://airtable.com/embed/shrePn1hzEaEzM92c?backgroundColor=cyan&prefill_Currency=BGN&prefill_Completed%20Date=${formatDate(new Date())}`}\n        width=\"100%\"\n        height=\"932\"\n        title=\"add-expense\"\n        style={{background: 'transparent', border: '0px solid #ccc'}}>\n      </iframe>\n    </div>\n  )\n}\n\nconst ImportFromRevolut = () => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <Header />\n      <iframe\n        className=\"airtable-embed\"\n        src=\"https://airtable.com/embed/shrTikm3blao4jou3?backgroundColor=cyan\"\n        width=\"100%\"\n        height=\"533\"\n        title=\"import-from-revolut\"\n        style={{background: 'transparent', border: '0px solid #ccc'}}>\n      </iframe>\n    </div>\n  )\n}\n\nconst Routes = () => {\n  const routes = useRoutes([\n    {\n      path: '/add-expense',\n      element: <AddExpensePage />,\n    },\n    {\n      path: '/import-from-revolut',\n      element: <ImportFromRevolut />,\n    },\n    {\n      path: '*',\n      element: <Home />,\n    },\n  ], process.env.REACT_APP_PUBLIC_URL);\n\n  return routes;\n};\n\nconst App = () => {\n  const airbase = new Airtable({\n    apiKey: process.env.REACT_APP_AIRTABLE_API_KEY,\n  }).base(process.env.REACT_APP_AIRTABLE_BASE_ID as string);\n\n  return (\n    <AirtableContext.Provider value={{ airbase }}>\n      <div className=\"App\">\n        <Router>\n          <Routes />\n        </Router>\n      </div>\n      <h5>Footer @ 2021 KK</h5>\n    </AirtableContext.Provider>\n  );\n};\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2)\n      month = '0' + month;\n  if (day.length < 2)\n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}